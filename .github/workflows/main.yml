---
name: CI

on:
  push:
    branches: ["master"]

jobs:
  tests:
    name: "Python ${{ matrix.python-version }}"
    runs-on: "ubuntu-latest"
    env:
      USING_COVERAGE: '3.6,3.8'
      
    strategy:
      matrix:
        python-version: ["2.7", "3.6", "3.7", "3.8", "pypy3"]

    steps:
      - uses: "actions/checkout@v2"
      - uses: "actions/setup-python@v1"
        with:
          python-version: "${{ matrix.python-version }}"
      - name: "Install dependencies"
        run: |
          set -xe
          python -VV
          python -m site
          python -m pip install --upgrade pip setuptools wheel
          python -m pip install --upgrade codecov virtualenv tox tox-gh-actions

      - name: "Run tox targets for ${{ matrix.python-version }}"
        run: "python -m tox"

      - name: "Convert coverage"
        run: "python -m coverage xml"
      - name: "Upload coverage to Codecov"
        uses: "codecov/codecov-action@v1"
        with:
          fail_ci_if_error: true

#      - name: "Convert coverage"
#        run: |
#          set -xe
#          python -m coverage combine
#          python -m coverage xml
#        if: "contains(env.USING_COVERAGE, matrix.python-version)"
#      - name: "Upload coverage to Codecov"
#        if: "contains(env.USING_COVERAGE, #matrix.python-version)"
#        uses: "codecov/codecov-action@v1"
#        with:
#          fail_ci_if_error: true

  docs:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.7"]
        env:
          - TOXENV: docs
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version}}
    - name: Build and Deploy
      run: |
        python -VV
        python -m site
        python -m pip install --upgrade pip setuptools wheel
        python -m pip install --upgrade codecov virtualenv tox tox-gh-actions

    - name: "Run tox targets for docs"
      env: ${{ matrix.env }}
      run: "python -m tox"

    - name: Deploy
      uses: crazy-max/ghaction-github-pages@v1
      with:
        keep_history: true
        target_branch: gh-pages
        build_dir: docs/_build/html/
      env:
        GITHUB_PAT: ${{ secrets.TEST }}


# docs as a version does not exist.  Need to trigger deploy when tox docs is ran.  Not sure how.